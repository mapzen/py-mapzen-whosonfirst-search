#!/usr/bin/env python

import sys
import os.path
import logging

import mapzen.whosonfirst.search
import mapzen.whosonfirst.index

if __name__ == '__main__':

    valid_modes = mapzen.whosonfirst.index.valid_modes()
    valid_modes = ", ".join(valid_modes)
    
    import optparse
    opt_parser = optparse.OptionParser()

    opt_parser.add_option('-s', '--source', dest='source', action='store', default=None, help="The path to the directory you want to index. This flag is deprecated, please use -m(ode) directory) instead")    
    opt_parser.add_option('-m', '--mode', dest='mode', action='store', default=None, help="A valid indexing mode. Valid modes are: %s." % valid_modes)
    opt_parser.add_option('-b', '--bulk', dest='bulk', action='store_true', default=False, help='Index files in bulk mode (default is False)')

    opt_parser.add_option('--index', dest='index', action='store', default='spelunker', help='Where to write the records to (default is spelunker)')
    opt_parser.add_option('--host', dest='host', action='store', default='localhost', help='What host your search index lives (default is localhost)')
    opt_parser.add_option('--port', dest='port', action='store', default=9200, help='What port your search index lives on (default is 9200)')
    opt_parser.add_option('--timeout', dest='timeout', action='store', default=600, help='Timeout in seconds for talking to you search index lives on (default is 600)')

    opt_parser.add_option('--liberal', dest='liberal', action='store_true', default=False, help='Be forgiving and do not stop execution if there are any errors preparing documents for indexing (default is false)')

    opt_parser.add_option('-v', '--verbose', dest='verbose', action='store_true', default=False, help='Be chatty (default is false)')

    options, args = opt_parser.parse_args()

    if options.verbose:
        logging.basicConfig(level=logging.DEBUG)
    else:
        logging.basicConfig(level=logging.INFO)

    if not options.mode and not options.source:
        logging.error("You must specify either -m(ode) or -s(source)")
        sys.exit(1)

    if not options.mode:
        logging.warning("-s(source) is deprecated - it's okay this time but please use -m(ode) directory instead")
        
        options.mode = 'directory'
        args.append(options.source)

    search_idx = mapzen.whosonfirst.search.index(host=options.host, port=options.port, timeout=options.timeout, index=options.index)

    if options.bulk:

        def features():
            
            def cb(f):
                return f
            
            idx = mapzen.whosonfirst.index.indexer(options.mode, cb)
            
            for f in idx.iter_paths(args):

                try:
                    yield search_idx.prepare_feature_bulk(f)
                except Exception, e:
                    logging.warning("failed to prepare feature because %s" % e)
                    logging.debug(f)

                    if not options.liberal:
                        raise Exception, e

        iter = features()
        search_idx.index_documents_bulk(iter)

    else:

        def cb(f):

            if not search_idx.index_feature(f):
                raise Exception, "failed to index %s" % f["properties"]["wof:id"]
    
        idx = mapzen.whosonfirst.index.indexer(options.mode, cb)
        idx.index_paths(args)
        
    sys.exit()
